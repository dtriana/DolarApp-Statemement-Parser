name: Version and Release

on:
  push:
    branches: ['main']
permissions:
  contents: write
jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          filter: tree:0
          sparse-checkout: |
            .github
            src

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Build
        id: build
        run: dotnet publish ${{ github.workspace }}/src/DolarAppStatementParser.sln -c Release -r win-x64 -p:PublishSingleFile=true

      - name: Create Release
        id: create_release
        uses: actions/github-script@v7
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          script: |
            const latestTag = (await github.rest.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            })).data[0].name;
            const releaseResp = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: latestTag,
              name: latestTag,
              generate_release_notes: true,
              draft: false,
              prerelease: false,
              release_name: latestTag
            });
            return { upload_url: releaseResp.data.upload_url };
      
      - name: Debug upload_url
        run: echo "Upload URL is ${{ steps.create_release.outputs.upload_url }}"

      - name: Upload Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path:  ${{ github.workspace }}/src/DolarAppStatementParser/bin/Release/net9.0/win-x64/publish/DolarAppStatementParser.exe
          asset_name: DolarAppStatementParser.exe
          asset_content_type: application/exe   
